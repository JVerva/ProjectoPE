library(ggplot2)
ggplot(data, aes(x, meanint, color = meanint)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = round(seq(min(meanint), max(meanint), by = 0.01),1)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
meanint
ggplot(data, aes(x, meanint, color = meanint)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = round(seq(min(meanint), max(meanint), by = 0.001),1)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x, meanint, color = meanint)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = round(seq(min(meanint), max(meanint), by = 0.0001),1)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
round(seq(min(meanint), max(meanint)
a <- round(seq(min(meanint), max(meanint)
a <- round(seq(min(meanint), max(meanint))
a
a
a <- round(seq(min(meanint), max(meanint), by = 0.0001))
a
ggplot(data, aes(x, meanint, color = meanint)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.0001),1) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x, meanint, color = meanint)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.001),1) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x, meanint, color = meanint)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.01),1) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
meanint
ggplot(data, aes(x, meanint, color = meanint)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.005),1) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.005) +
ggplot(data, aes(x, meanint, color = meanint)) +
seed = 431
nam = 600
lambda = 2.33
dim = 100
Z = 3.29
data = matrix(data = 0, 50, 600)
set.seed(seed)
seed = 431
nam = 600
lambda = 2.33
dim = 100
Z = 3.29
data = matrix(data = 0, 50, 600)
set.seed(seed)
for (i in 1:50){
for(j in 1:nam){
data <- rexp(dim*i,lambda)
if(j == 1){
Sd = sd(data)
int = Sd * Z * 2
}else{
Sd = append(Sd, sd(data))
int = append(int, Sd[j] * Z *2)
}
}
if(i==1){
meanint <- mean(int)
x <- i*dim
}else{
meanint <- append(meanint,mean(int))
x <- append(x, i*dim)
}
}
#fazer a data frame
data <- data.frame(x, meanint)
"plot do grafico"
library(ggplot2)
ggplot(data, aes(x, meanint, color = meanint)) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.005) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
#limpar os dados
rm(list = ls())
#limpar os dados
rm(list = ls())
seed = 431
nam = 600
lambda = 2.33
dim = 100
Z = 3.29
data = matrix(data = 0, 50, 600)
set.seed(seed)
for (i in 1:50){
for(j in 1:nam){
data <- rexp(dim*i,lambda)
if(j == 1){
Sd = sd(data)
int = Sd * Z * 2
}else{
Sd = append(Sd, sd(data))
int = append(int, Sd[j] * Z *2)
}
}
if(i==1){
meanint <- mean(int)
x <- i*dim
}else{
meanint <- append(meanint,mean(int))
x <- append(x, i*dim)
}
}
#fazer a data frame
data <- data.frame(x, meanint)
"plot do grafico"
library(ggplot2)
ggplot(data, aes(x, meanint, color = meanint)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.005) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
#limpar os dados
rm(list = ls())
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança", sep = "")
ggplot(data, aes(x, meanint, color = meanint)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.005)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
seed = 431
nam = 600
lambda = 2.33
dim = 100
Z = 3.29
data = matrix(data = 0, 50, 600)
set.seed(seed)
for (i in 1:50){
for(j in 1:nam){
data <- rexp(dim*i,lambda)
if(j == 1){
Sd = sd(data)
int = Sd * Z * 2
}else{
Sd = append(Sd, sd(data))
int = append(int, Sd[j] * Z *2)
}
}
if(i==1){
meanint <- mean(int)
x <- i*dim
}else{
meanint <- append(meanint,mean(int))
x <- append(x, i*dim)
}
}
#fazer a data frame
data <- data.frame(x, meanint)
"plot do grafico"
library(ggplot2)
ggplot(data, aes(x, meanint, color = meanint)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.005)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
#limpar os dados
rm(list = ls())
#path do ficheiro, sendo que não consegui automatizar o download devido ao login do técnico
excelFilePath <- "C:\\Users\\joaog\\Downloads\\Utentes.xlsx"
#ler a tabela
library(readxl)
Parametros <- names(read_excel(excelFilePath,"Sheet1","A1:D1", col_types = "text", .name_repair = "minimal"))
Parametros <- as.vector(unlist(Parametros))
ParametrosReq <- c("Colesterol", "TAD")
Indexes <- match(ParametrosReq, Parametros)
library(openxlsx)
Indexes <- int2col(Indexes)
for (i in 1:length(Indexes)){
Indexes[i] <- paste(Indexes[i], "1:", Indexes[i], "77", sep = "")
}
Colesterol <- as.double(unlist(read_excel(excelFilePath,"Sheet1",Indexes[1], col_types = "text")))
TAD <- as.double(unlist(read_excel(excelFilePath,"Sheet1",Indexes[2], col_types = "text")))
#fazer a data frame
data <- data.frame(Colesterol,TAD)
"plot do grafico"
library(ggplot2)
ggplot(data, aes(Colesterol, TAD, color = TAD)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = round(seq(min(TAD), max(TAD), by = 2),1)) +
scale_x_continuous(breaks = round(seq(min(Colesterol)-10, max(Colesterol)+10, by = 10),1))
#definir valores iniciais
seed = 57
#definir valores iniciais
seed = 57
#definir valores iniciais
seed = 57
#definir valores iniciais
seed = 57
#definir valores iniciais
seed = 57
#definir valores iniciais
seed = 57
#definir valores iniciais
seed = 57
nam = 950
lambda = 1.99
lambdac = 0.24
pc = 0.1
dim = 100
Z = 1.7
data = matrix(data = 0, 50, 600)
set.seed(seed)
#gerar os dados
for (i in 1:25){
nc = pc * dim*i
for(j in 1:nam){
data <- rexp(dim*i,lambda)
datac <- rexp(nc,lambdac)
datac <- append(datac, data[1:(dim*i-nc)])
if(j == 1){
Sd = sd(data)
int = Sd * Z * 2
Sdc = sd(datac)
intc = Sdc * Z * 2
}else{
Sd = append(Sd, sd(data))
int = append(int, Sd[j] * Z *2)
Sdc = append(Sdc, sd(datac))
intc = append(intc, Sd[j] * Z *2)
}
}
if(i==1){
meanint <- mean(int)
meanintc <- mean(intc)
x <- i*dim
}else{
meanint <- append(meanint,mean(int))
meanintc <- append(meanintc,mean(intc))
x <- append(x, i*dim)
}
}
#plot do grafico
plot(x, meanintc, col = "green")
points(x, meanint, col = "red")
status = c(rep("clean",lenght(meanint)),rep("contaminated",lenght(meanintc)))
status = c(rep("clean",length(meanint)),rep("contaminated",length(meanintc)))
data = data.frame(x,c(meanint,meanintc),status)
ggplot(data, aes(x, meanintc, group = status)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.005)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x = x, y=meanintall, group = status)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.005)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
meanintall = c(meanint,meanintc)
data = data.frame(x,meanintall,status)
library(ggplot2)
ggplot(data, aes(x = x, y=meanintall, group = status)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.005)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.005)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
#limpar os dados
rm(list = ls())
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.005)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
library(ggplot2)
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.005)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
library(ggplot2)
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanint), max(meanint), by = 0.005)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
library(ggplot2)
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanintall), max(meanintall), by = 0.005)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
#definir valores iniciais
seed = 57
nam = 950
lambda = 1.99
lambdac = 0.24
pc = 0.1
dim = 100
Z = 1.7
data = matrix(data = 0, 50, 600)
set.seed(seed)
#gerar os dados
for (i in 1:25){
nc = pc * dim*i
for(j in 1:nam){
data <- rexp(dim*i,lambda)
datac <- rexp(nc,lambdac)
datac <- append(datac, data[1:(dim*i-nc)])
if(j == 1){
Sd = sd(data)
int = Sd * Z * 2
Sdc = sd(datac)
intc = Sdc * Z * 2
}else{
Sd = append(Sd, sd(data))
int = append(int, Sd[j] * Z *2)
Sdc = append(Sdc, sd(datac))
intc = append(intc, Sd[j] * Z *2)
}
}
if(i==1){
meanint <- mean(int)
meanintc <- mean(intc)
x <- i*dim
}else{
meanint <- append(meanint,mean(int))
meanintc <- append(meanintc,mean(intc))
x <- append(x, i*dim)
}
}
status = c(rep("clean",length(meanint)),rep("contaminated",length(meanintc)))
meanintall = c(meanint,meanintc)
data = data.frame(x,meanintall,status)
library(ggplot2)
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3, show.legend = FALSE) +
scale_y_continuous(breaks = seq(min(meanintall), max(meanintall), by = 0.005)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 500),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3) +
scale_y_continuous(breaks = seq(min(meanintall), max(meanintall), by = 0.005)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 250),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3) +
scale_y_continuous(breaks = seq(min(meanintall), max(meanintall), by = 0.001)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 250),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3) +
scale_y_continuous(breaks = seq(min(meanintall), max(meanintall), by = 0.002)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 250),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3) +
scale_y_continuous(breaks = seq(min(meanintall), max(meanintall)+0.002, by = 0.002)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 250),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3) +
scale_y_continuous(breaks = seq(min(meanintall), max(meanintall)+0.001, by = 0.001)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 250),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3) +
scale_y_continuous(breaks = seq(min(meanintall), max(meanintall), by = 0.001)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 250),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3) +
scale_y_continuous(breaks = seq(min(meanintall)-0.1437, max(meanintall), by = 0.001)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 250),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3) +
scale_y_continuous(breaks = seq(min(meanintall)-0.001437, max(meanintall), by = 0.001)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 250),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3) +
scale_y_continuous(breaks = seq(min(meanintall)-0.001437, max(meanintall)+0.001, by = 0.001)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 250),1)) +
labs(x = "dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 3) +
scale_y_continuous(breaks = seq(min(meanintall)-0.001437, max(meanintall)+0.001, by = 0.001)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 250),1)) +
labs(x = "Dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
ggplot(data, aes(x = x, y=meanintall, group = status, color = status)) +
geom_point(shape = 16, size = 2) +
scale_y_continuous(breaks = seq(min(meanintall)-0.001437, max(meanintall)+0.001, by = 0.001)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 250),1)) +
labs(x = "Dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
#definir valores iniciais
seed = 57
nam = 950
lambda = 1.99
lambdac = 0.24
pc = 0.1
dim = 100
Z = 1.7
data = matrix(data = 0, 50, 600)
set.seed(seed)
#gerar os dados
for (i in 1:25){
nc = pc * dim*i
for(j in 1:nam){
data <- rexp(dim*i,lambda)
datac <- rexp(nc,lambdac)
datac <- append(datac, data[1:(dim*i-nc)])
if(j == 1){
Sd = sd(data)
int = Sd * Z * 2
Sdc = sd(datac)
intc = Sdc * Z * 2
}else{
Sd = append(Sd, sd(data))
int = append(int, Sd[j] * Z *2)
Sdc = append(Sdc, sd(datac))
intc = append(intc, Sd[j] * Z *2)
}
}
if(i==1){
meanint <- mean(int)
meanintc <- mean(intc)
x <- i*dim
}else{
meanint <- append(meanint,mean(int))
meanintc <- append(meanintc,mean(intc))
x <- append(x, i*dim)
}
}
tipo = c(rep("limpo",length(meanint)),rep("contaminado",length(meanintc)))
meanintall = c(meanint,meanintc)
data = data.frame(x,meanintall,status)
#plot do gráfico
library(ggplot2)
ggplot(data, aes(x = x, y=meanintall, group = tipo, color = tipo)) +
geom_point(shape = 16, size = 2) +
scale_y_continuous(breaks = seq(min(meanintall)-0.001437, max(meanintall)+0.001, by = 0.001)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 250),1)) +
labs(x = "Dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
data = data.frame(x,meanintall,tipo)
#plot do gráfico
library(ggplot2)
ggplot(data, aes(x = x, y=meanintall, group = tipo, color = tipo)) +
geom_point(shape = 16, size = 2) +
scale_y_continuous(breaks = seq(min(meanintall)-0.001437, max(meanintall)+0.001, by = 0.001)) +
scale_x_continuous(breaks = round(seq(min(x)-100, max(x), by = 250),1)) +
labs(x = "Dimensão da amostra", y = "Média da amplitude dos intervalods de confiança")
seed = 2018
n = c(5,24,71)
nam = 1970
min = 9
max = 13
mean = abs(max+min)/2
sd = sqrt((max-min)^2)/12
for(i in 1:length(n)){
set.seed(seed)
for(j in 1:n[i]){
if(j == 1){
X <- mean(runif(nam , min=min, max=max))
}else{
X <- append(X, mean(runif(nam , min=min, max=max)))
}
}
x <- seq(min, max, by = (max-min)/(length(X)-1))
f<-function(x) {dnorm(x, mean = mean, sd = sd)*n[i]}
ggplot(data.frame(X),aes(x = X)) + geom_histogram( mapping = aes(y = ..count..),color="Black", fill = "Tomato", bins = 15) + stat_function(fun = f)
if(i == 1){
Xm <- mean(X)
}else{
Xm <- append(Xm,mean(X))
}
}
library(ggplot2)
ggplot(data.frame(X),aes(x = X)) + geom_histogram( mapping = aes(y = ..count..),color="Black", fill = "Tomato", bins = 15) + stat_function(fun = f)
seed = 2018
n = c(5,24,71)
nam = 1970
min = 9
max = 13
mean = abs(max+min)/2
sd = sqrt((max-min)^2)/12
for(i in 1:length(n)){
set.seed(seed)
for(j in 1:n[i]){
if(j == 1){
X <- mean(runif(nam , min=min, max=max))
}else{
X <- append(X, mean(runif(nam , min=min, max=max)))
}
}
x <- seq(min, max, by = (max-min)/(length(X)-1))
f<-function(x) {dnorm(x, mean = mean, sd = sd)*n[i]}
library(ggplot2)
ggplot(data.frame(X),aes(x = X)) + geom_histogram( mapping = aes(y = ..count..),color="Black", fill = "Tomato", bins = 15) + stat_function(fun = f)
if(i == 1){
Xm <- mean(X)
}else{
Xm <- append(Xm,mean(X))
}
}
